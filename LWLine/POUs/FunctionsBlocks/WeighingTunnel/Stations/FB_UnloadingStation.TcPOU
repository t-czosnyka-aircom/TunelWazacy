<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_UnloadingStation" Id="{296f6eb6-2953-417c-abf3-86065ed0eed9}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_UnloadingStation EXTENDS FB_BaseStation
VAR_INPUT
	stSettings: ST_UnloadingStation_Settings;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	fbUnloadingActuator: FB_ActuatorOOP_TC;
	fbUnloadingSensor: FB_Sensor;
END_VAR
VAR_IN_OUT
	stInOuts :ST_UnloadingStation_InOuts;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Call FB_BaseStation
SUPER^(fbTableControl:=fbTableControl);
iStationId:=202;
sStationName :='Unloading Station';
bRotationInterlock:=fbUnloadingActuator.pInHomePosition;
fbUnloadingActuator(stDigInOut:=stInOuts.stUnloadingActuator, bI_Control_Ready:=TRUE, bManualMode:=bManualModeActive, 
					bI_HomeInterlock:= TRUE, bI_WorkInterlock:=fbTableControl.prTableInPosition,
					rI_HomeTime_S:=1.0,  rI_WorkTime_S:=1.0,bSimulationOn:=bSimulationON, bManualMode:= bManualModeActive);

fbUnloadingSensor(bSensorSignal:=stInOuts.bBottleDetectionSensor,bSimulationON:=bSimulationON,uiSensorOnDelay_MS:=0);									
					
CASE iWorkStep OF
	0: //Initialisation
		IF fbUnloadingActuator.mGoToHome(FALSE) THEN
			iWorkStep := 10;
		ELSIF fbUnloadingActuator.pGoToHomeError THEN 
			mSetError(nTable_ErrorList.UnloadingActuatorBackwardError);
		END_IF
	
	10: //Wait for bottle - Table Rotation
		IF __ISVALIDREF(fbTablePlace)THEN
			bRotationRequest := fbTablePlace.prStateIsEmpty;
			IF fbTableControl.prWorkPermission AND_THEN fbTablePlace.prStateIsAfterWeighing THEN
				iWorkStep := 20;
			END_IF;
		ELSE
			bRotationRequest := TRUE;
		END_IF
		IF bManualModeRequest THEN
			iWorkStep:= 80;
		END_IF
		
	20:	//Eject Bottle
		IF fbUnloadingActuator.mGoToWork(FALSE) THEN
			iWorkStep:=30;
		ELSIF fbUnloadingActuator.pGoToWorkError THEN 
			mSetError(nTable_ErrorList.UnloadingActuatorForwardError);
		END_IF
		
	30: //Wait for sensor ON

		fbUnloadingSensor.bRequestedState:=TRUE;
		fbUnloadingSensor.bCheckState:=TRUE;
		IF fbUnloadingSensor.prSensorOnOK THEN
			iWorkStep := 40;
		ELSIF fbUnloadingSensor.prSensorOnError THEN
			mSetError(nTable_ErrorList.UnloadingBottleDetectionNotOn);
		END_IF
	
	40: //Wait for sensor OFF
		fbUnloadingSensor.bRequestedState:=FALSE;
		fbUnloadingSensor.bCheckState:=TRUE;
		IF fbUnloadingSensor.prSensorOffOK THEN
			IF __ISVALIDREF(fbTablePlace) AND_THEN fbTablePlace.mBottleEmpty() THEN
				iWorkStep := 0;
			END_IF
		ELSIF fbUnloadingSensor.prSensorOffError THEN
			mSetError(nTable_ErrorList.UnloadingBottleDetectionNotOff);
		END_IF
	
	80: //Manual Mode
		IF NOT bManualModeRequest THEN
			iWorkStep:=0;
		END_IF
		
	90: //Error 


	91: //Error Reset
		iWorkStep := 0;
		fbUnloadingActuator.mErrorReset();
	
	
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="FB_UnloadingStation">
      <LineId Id="144" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="52" Count="2" />
      <LineId Id="127" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="86" Count="1" />
      <LineId Id="69" Count="0" />
      <LineId Id="39" Count="1" />
      <LineId Id="32" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="172" Count="0" />
      <LineId Id="169" Count="1" />
      <LineId Id="34" Count="0" />
      <LineId Id="167" Count="1" />
      <LineId Id="162" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="77" Count="1" />
      <LineId Id="56" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="130" Count="0" />
      <LineId Id="63" Count="1" />
      <LineId Id="99" Count="1" />
      <LineId Id="65" Count="0" />
      <LineId Id="60" Count="1" />
      <LineId Id="129" Count="0" />
      <LineId Id="131" Count="0" />
      <LineId Id="66" Count="1" />
      <LineId Id="103" Count="1" />
      <LineId Id="101" Count="1" />
      <LineId Id="62" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="159" Count="2" />
      <LineId Id="158" Count="0" />
      <LineId Id="80" Count="1" />
      <LineId Id="90" Count="1" />
      <LineId Id="89" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="82" Count="2" />
      <LineId Id="28" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>