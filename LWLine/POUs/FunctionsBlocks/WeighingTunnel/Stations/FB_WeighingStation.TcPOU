<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_WeighingStation" Id="{44fe5b5a-0f0b-4511-b67e-0a0f72747565}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_WeighingStation EXTENDS FB_BaseStation
VAR_INPUT
	stSettings: ST_WeighingStation_Settings;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	fbWeighingActuator: FB_ActuatorOOP_TC;
	fbPusherActuator: FB_ActuatorOOP_TC;
	fbBottleSensor: FB_Sensor;
	bDrawerClosed:BOOL;
	bDrawerUnlockRequest:BOOL;

	fbDrawerOpenTON:TON;
END_VAR
VAR_IN_OUT
	stInOuts :ST_WeighingStation_InOuts;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[//SIM/
bDrawerClosed := stInOuts.bDrawerIsClosed;

//Call FB_BaseStation
SUPER^(fbTableControl:=fbTableControl);


bRotationInterlock:=bDrawerClosed AND fbPusherActuator.pInHomePosition AND fbWeighingActuator.pInHomePosition;


fbWeighingActuator(stDigInOut:=stInOuts.stWeighingActuator, bI_Control_Ready:=TRUE, bManualMode:=bManualMode, 
					bI_HomeInterlock:= TRUE, bI_WorkInterlock:=fbTableControl.prTableInPosition,
					rI_HomeTime_S:=1.0,  rI_WorkTime_S:=1.0,bSimulationOn:=bSimulationON, bManualMode:= bManualMode);
					
fbPusherActuator(stDigInOut:=stInOuts.stPusherActuator, bI_Control_Ready:=TRUE, bManualMode:=bManualMode, 
					bI_HomeInterlock:= TRUE, 
					bI_WorkInterlock:=fbTableControl.prTableInPosition AND fbWeighingActuator.pInWorkPosition,
					rI_HomeTime_S:=1.0,  rI_WorkTime_S:=1.0,bSimulationOn:=bSimulationON, bManualMode:= bManualMode);
					
fbBottleSensor(bSensorSignal:=stInOuts.bBottleDetectionSensor,bSimulationON:=bSimulationON,
uiSensorOnDelay_MS:=500, uiErrorOnDelay_MS:=1000,uiSensorOffDelay_MS:=500, uiErrorOffDelay_MS:=1000);
		
fbDrawerOpenTON(IN:=NOT bDrawerClosed, PT:=T#1S);			
IF fbDrawerOpenTON.Q THEN
	stSettings.iNOK_BottleCounter := 0;
END_IF


			
CASE iWorkStep OF
	0: //CheckState
		stInOuts.bDrawerLockOpen:= FALSE;
		IF  __ISVALIDREF(fbTablePlace) AND_THEN fbTablePlace.prStateIsNOK THEN
			iWorkStep:=50;
		ELSIF bDrawerUnlockRequest THEN
			iWorkStep:=70;
		ELSE
			iWorkStep:=5;
		END_IF

	5: //HomePosition
		IF fbWeighingActuator.mGoToHome(FALSE) AND fbPusherActuator.mGoToHome(FALSE) AND stInOuts.bDrawerIsClosed AND stInOuts.bDrawerIsLocked THEN
			iWorkStep:=10;
		ELSIF fbWeighingActuator.pGoToHomeError THEN
			mSetError(nTable_ErrorList.WeighingActuatorError);
		ELSIF fbPusherActuator.pGoToHomeError THEN
			mSetError(nTable_ErrorList.WeighingPusherActuatorError);	
		END_IF
		
	
	10: //Wait for Bottle - Table rotation
		IF stSettings.iNOK_BottleCounter >= 5 THEN
			bDrawerUnlockRequest := TRUE;
		END_IF
		IF __ISVALIDREF(fbTablePlace) THEN
			fbBottleSensor.bRequestedState := NOT fbTablePlace.prStateIsEmpty;
			fbBottleSensor.bCheckState := fbTableControl.prTableInPosition;
			IF fbTablePlace.prStateIsAfterWeighing AND fbBottleSensor.prSensorOnOK OR (fbTablePlace.prStateIsEmpty AND fbBottleSensor.prSensorOffOK) THEN
				bRotationRequest := TRUE;
			ELSIF fbTablePlace.prStateIsBeforeWeighing AND fbBottleSensor.prSensorOnOK THEN
				iWorkStep:=20;
			END_IF
		END_IF;
			
	20: //Weighing Actuator Work
		IF fbWeighingActuator.mGoToWork(FALSE) AND __ISVALIDREF(fbTablePlace) AND_THEN fbTablePlace.mBottleProcessing() THEN
			iWorkStep:=30;
		END_IF
	
	30: //Weight and Camera Check
		iWorkStep:=40;
		IF FALSE THEN
			IF  __ISVALIDREF(fbTablePlace) AND_THEN fbTablePlace.mBottleNOK() THEN
				iWorkStep:=50;
			END_IF
		END_IF
	
	
	
	40: //ALL OK
		IF fbWeighingActuator.mGoToHome(FALSE) AND __ISVALIDREF(fbTablePlace) AND_THEN fbTablePlace.mBottleAfterWeighing() THEN
			iWorkStep:=0;
		END_IF
	
	50: // NOK - Pusher Forward
		IF stSettings.iNOK_BottleCounter  < stSettings.iMaxNOK_Bottles THEN
			IF fbPusherActuator.mGoToWork(FALSE) THEN
				iWorkStep:=55;
			END_IF
		ELSE
			mSetError(nTable_ErrorList.WeighingNOK_DrawerFull);
		END_IF
		
		
	55: //Wait for bottle to fall
		fbStepTON.PT:=T#1S;
		IF fbStepTON.Q THEN
			iWorkStep:=60;
		END_IF
		
	60: //Pusher Back
		IF fbPusherActuator.mGoToHome(FALSE) THEN
			stSettings.iNOK_BottleCounter := stSettings.iNOK_BottleCounter+1;
			IF __ISVALIDREF(fbTablePlace) AND_THEN fbTablePlace.mBottleEmpty() THEN
				iWorkStep:=0;
			END_IF
		ELSIF fbPusherActuator.pGoToHomeError THEN
			mSetError(nTable_ErrorList.WeighingPusherActuatorError);	
		END_IF
		
	70: //Drawer Unlock
		
		stInOuts.bDrawerLockOpen:= TRUE;
		fbStepTON.PT:=T#3S;
		IF NOT stInOuts.bDrawerIsLocked THEN
			iWorkStep:=71;
		ELSIF fbStepTON.Q THEN
			mSetError(nTable_ErrorList.WeighingDrawerOpeningError);	
		END_IF
	
	71: //Wait Drawer Opened
		IF NOT stInOuts.bDrawerIsClosed THEN
			bDrawerUnlockRequest:=FALSE;
			stInOuts.bDrawerLockOpen:= FALSE;
			iWorkStep:=72;
		END_IF
		
	72: //Wait Drawer Closed
		IF stInOuts.bDrawerIsClosed AND stInOuts.bDrawerIsLocked THEN
			iWorkStep:=0;
		END_IF
	
	
	90: //Error

		
	91: //Error Reset
		iWorkStep:=0;
		fbWeighingActuator.mErrorReset();
		fbPusherActuator.mErrorReset();
	
END_CASE


]]></ST>
    </Implementation>
    <LineIds Name="FB_WeighingStation">
      <LineId Id="228" Count="1" />
      <LineId Id="411" Count="1" />
      <LineId Id="230" Count="0" />
      <LineId Id="414" Count="0" />
      <LineId Id="413" Count="0" />
      <LineId Id="231" Count="10" />
      <LineId Id="384" Count="1" />
      <LineId Id="387" Count="0" />
      <LineId Id="242" Count="4" />
      <LineId Id="379" Count="0" />
      <LineId Id="374" Count="0" />
      <LineId Id="368" Count="0" />
      <LineId Id="248" Count="25" />
      <LineId Id="391" Count="1" />
      <LineId Id="274" Count="63" />
      <LineId Id="339" Count="1" />
      <LineId Id="342" Count="19" />
      <LineId Id="367" Count="0" />
      <LineId Id="180" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>